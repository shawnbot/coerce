{"name":"Coerce","tagline":"A nice little JavaScript library for type coercion and data cleanup","body":"# coerce\r\nCoerce is a JavaScript toolkit for writing type coercions: functions that parse\r\nstrings into other formats with configurable defaults if the string can't be\r\nparsed. Object coercion functions can be used to clean up data (from CSV, or\r\nother string-based formats) by coercing strings into numbers, dates, and more.\r\n\r\n![travis-ci](https://api.travis-ci.org/shawnbot/coerce.png)\r\n\r\n## Examples\r\nCoerce provides functions for coercing both individual values and keys of\r\nobjects. Here are some examples:\r\n\r\n```js\r\n// coerce a number or return zero if the result is NaN\r\nvar numOrZero = coerce.number(0);\r\nnumOrZero(\"42\")   // 42\r\nnumOrZero(\"asdf\") // 0\r\n\r\nvar intOrNull = coerce.int(null);\r\nintOrNull(\"42\")   // 42\r\nintOrNull(\"asdf\") // null\r\n\r\n// coerce the \"size\" key of an object to a float (in place)\r\nvar sizeToFloat = coerce.object()\r\n  .key(\"size\", \"float\");\r\nsizeToFloat({size: \"46.5\"});  // {\"size\": 46.5}\r\n\r\n// coerce a date string into a Date object:\r\nvar parseDate = coerce.date(\"%Y-%m-%d\");\r\nparseDate(\"2001-10-31\") // <Date>\r\nparseDate(\"asdf\")       // null\r\n\r\n// you can also create multi-format date coercions, e.g. if your\r\n// data contains messy data in multiple formats\r\nvar parseDate = coerce.date([\r\n  \"%Y-%m-%d\",\r\n  \"%d/%m/%Y\"\r\n]);\r\nparseDate(\"2001-10-31\") // <Date>\r\nparseDate(\"13/10/2001\") // <Date>\r\n\r\n// object coercions have a .map() method, too, just in case\r\n// you don't want to modify the objects in place\r\nvar a = {size: \"1.4\"},\r\n    b = {size: \"2.6\"};\r\n[a, b].map(sizeToFloat.map);\r\n// produces an array of new objects with coerced keys:\r\n// [{\"size\": 1.4}, {\"size\": 2.6}]\r\n\r\n// and you can coerce multiple keys like this:\r\nvar prepData = coerce.object()\r\n  .keys({\r\n    height: \"number\",\r\n    weight: \"int\",\r\n    birthday: coerce.date(\"%Y-%m-%d\")\r\n  });\r\nprepData({\r\n  height: \"6.5\",\r\n  weight: \"250\",\r\n  birthday: \"1945-12-15\"\r\n});\r\n// produces:\r\n// {\"height\": 6.5, \"weight\": 250, \"birthday\": <Date>}\r\n// or, just apply your coersions to a list of data objects,\r\n// e.g. loaded from a CSV file:\r\nd3.csv(\"path/to/data.csv\", function(error, data) {\r\n  data.forEach(prepData);\r\n  // your data should have numbers and Date objects in it now\r\n});\r\n```\r\n\r\n## Usage (Node.js)\r\nTo use coerce in Node.js:\r\n\r\n```sh\r\n$ npm install coerce\r\n```\r\n\r\nthen, in your script:\r\n\r\n```js\r\nvar coerce = require(\"coerce\");\r\n```\r\n\r\n## Usage (browser)\r\nTo use coerce in your browser, just include the script:\r\n\r\n```html\r\n<script src=\"path/to/coerce.js\"></script>\r\n```\r\n\r\nNote that `coerce.date()` requires [d3](http://d3js.org), so you'll need that, too.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}